<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" total="4" passed="3">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="141703" started-at="2019-06-09T16:54:38Z" finished-at="2019-06-09T16:57:00Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="141703" started-at="2019-06-09T16:54:38Z" finished-at="2019-06-09T16:57:00Z">
      <class name="testcases.XYZBank">
        <test-method status="PASS" signature="setUp()[pri:0, instance:testcases.XYZBank@363ee3a2]" name="setUp" is-config="true" duration-ms="12514" started-at="2019-06-09T17:54:26Z" finished-at="2019-06-09T17:54:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="depositTest(java.util.Hashtable)[pri:1, instance:testcases.XYZBank@363ee3a2]" name="depositTest" duration-ms="45208" started-at="2019-06-09T17:54:38Z" data-provider="getDepositData" finished-at="2019-06-09T17:55:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{amount=1000, expectedResult=success}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- depositTest -->
        <test-method status="PASS" signature="depositTest(java.util.Hashtable)[pri:1, instance:testcases.XYZBank@363ee3a2]" name="depositTest" duration-ms="6032" started-at="2019-06-09T17:55:23Z" data-provider="getDepositData" finished-at="2019-06-09T17:55:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{amount=-34, expectedResult=failure}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- depositTest -->
        <test-method status="PASS" signature="depositTest(java.util.Hashtable)[pri:1, instance:testcases.XYZBank@363ee3a2]" name="depositTest" duration-ms="45128" started-at="2019-06-09T17:55:29Z" data-provider="getDepositData" finished-at="2019-06-09T17:56:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{amount=dsfsfd, expectedResult=failure}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- depositTest -->
        <test-method status="FAIL" signature="depositTest(java.util.Hashtable)[pri:1, instance:testcases.XYZBank@363ee3a2]" name="depositTest" duration-ms="45295" started-at="2019-06-09T17:56:14Z" data-provider="getDepositData" finished-at="2019-06-09T17:57:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{amount=34256673567464584678567895779589578, expectedResult=failure}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [0] but found [3.4256673567464586e+34]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [0] but found [3.4256673567464586e+34]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:135)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:190)
	at org.testng.Assert.assertEquals(Assert.java:200)
	at testcases.XYZBank.depositTest(XYZBank.java:35)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:645)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:822)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1130)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:113)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:206)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:177)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- depositTest -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:testcases.XYZBank@363ee3a2]" name="tearDown" is-config="true" duration-ms="732" started-at="2019-06-09T17:57:00Z" finished-at="2019-06-09T17:57:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- testcases.XYZBank -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
